{
  "version": "1.1",
  "engine": "linux/amd64|Transformer|1.40.11|1b271555882eacdfb4e6598d6d0552e9b9b1449b|2024-02-02_01:36:22PM",
  "containerized": false,
  "host_distro": {
    "name": "Ubuntu",
    "version": "20.04",
    "display_name": "Ubuntu 20.04.6 LTS"
  },
  "type": "build",
  "state": "done",
  "target_reference": "c18a31b1eddd",
  "system": {
    "type": "Linux",
    "release": "5.15.153.1-microsoft-standard-WSL2",
    "distro": {
      "name": "Alpine Linux",
      "version": "3.14.2",
      "display_name": "Alpine Linux v3.14"
    }
  },
  "source_image": {
    "identity": {
      "id": "sha256:c18a31b1eddd263bbd62c11c9c93d0e79897e522491a2d27288379768d4bc0ca",
      "tags": [
        "latest"
      ],
      "names": [
        "srs-front_end:latest"
      ],
      "digests": [
        "sha256:c18a31b1eddd263bbd62c11c9c93d0e79897e522491a2d27288379768d4bc0ca"
      ],
      "full_digests": [
        "srs-front_end@sha256:c18a31b1eddd263bbd62c11c9c93d0e79897e522491a2d27288379768d4bc0ca"
      ]
    },
    "size": 19921316,
    "size_human": "20 MB",
    "create_time": "2024-10-15T04:23:28Z",
    "docker_version": "26.0.0",
    "architecture": "amd64",
    "exposed_ports": [
      "80/tcp"
    ],
    "os": "linux",
    "labels": {
      "com.docker.compose.project": "srs",
      "com.docker.compose.service": "front_end",
      "com.docker.compose.version": "2.26.1",
      "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
    },
    "env_vars": [
      "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
      "NGINX_VERSION=1.21.1",
      "NJS_VERSION=0.6.1",
      "PKG_RELEASE=1"
    ],
    "container_entry": {
      "exe_path": ""
    }
  },
  "minified_image_size": 3833583,
  "minified_image_size_human": "3.8 MB",
  "minified_image": "srs-front_end.slim",
  "minified_image_id": "sha256:04af28b45a08a4bd901f69bdd967530439f97ff5f0d0a73faf926ec9c21a9a1a",
  "minified_image_digest": "sha256:403b64f00d8fd0177772367675871de8bf3b51bb0f4d2a6e69c2a4b296f6b67d",
  "minified_image_has_data": true,
  "minified_by": 5.196526591442001,
  "artifact_location": "/tmp/slim-state/.slim-state/images/c18a31b1eddd263bbd62c11c9c93d0e79897e522491a2d27288379768d4bc0ca/artifacts",
  "container_report_name": "creport.json",
  "seccomp_profile_name": "srs-front_end-seccomp.json",
  "apparmor_profile_name": "srs-front_end-apparmor-profile",
  "image_stack": [
    {
      "is_top_image": true,
      "id": "sha256:c18a31b1eddd263bbd62c11c9c93d0e79897e522491a2d27288379768d4bc0ca",
      "full_name": "srs-front_end:latest",
      "repo_name": "srs-front_end",
      "version_tag": "latest",
      "raw_tags": [
        "srs-front_end:latest"
      ],
      "create_time": "2024-10-15T04:23:28Z",
      "new_size": 54161408,
      "new_size_human": "54 MB",
      "instructions": [
        {
          "type": "ADD",
          "time": "2021-08-27T17:19:45Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 6221824,
          "size_human": "6.2 MB",
          "params": "file:aad4290d27580cc1a094ffaf98c3ca2fc5d699fe695dfb8e6e9fac20f1129450 in /",
          "command_snippet": "ADD file:aad4290d27580cc1a094ffaf98c3ca2fc5d...",
          "command_all": "ADD file:aad4290d27580cc1a094ffaf98c3ca2fc5d699fe695dfb8e6e9fac20f1129450 /",
          "target": "/",
          "source_type": "file",
          "inst_set_time_bucket": "2021-08-28T00:15:00+07:00",
          "inst_set_time_index": 0,
          "inst_set_time_reverse_index": 2
        },
        {
          "type": "CMD",
          "time": "2021-08-27T17:19:45Z",
          "is_nop": true,
          "is_exec_form": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "[\"/bin/sh\"]\n",
          "command_snippet": "CMD [\"/bin/sh\"]\n",
          "command_all": "CMD [\"/bin/sh\"]\n",
          "inst_set_time_bucket": "2021-08-28T00:15:00+07:00",
          "inst_set_time_index": 0,
          "inst_set_time_reverse_index": 2
        },
        {
          "type": "LABEL",
          "time": "2021-08-27T20:48:06Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
          "command_snippet": "LABEL maintainer=NGINX Docker Maintainers <d...",
          "command_all": "LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>",
          "inst_set_time_bucket": "2021-08-28T03:45:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "ENV",
          "time": "2021-08-27T20:48:06Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "NGINX_VERSION=1.21.1",
          "command_snippet": "ENV NGINX_VERSION=1.21.1",
          "command_all": "ENV NGINX_VERSION=1.21.1",
          "inst_set_time_bucket": "2021-08-28T03:45:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "ENV",
          "time": "2021-08-27T20:48:07Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "NJS_VERSION=0.6.1",
          "command_snippet": "ENV NJS_VERSION=0.6.1",
          "command_all": "ENV NJS_VERSION=0.6.1",
          "inst_set_time_bucket": "2021-08-28T03:45:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "ENV",
          "time": "2021-08-27T20:48:07Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PKG_RELEASE=1",
          "command_snippet": "ENV PKG_RELEASE=1",
          "command_all": "ENV PKG_RELEASE=1",
          "inst_set_time_bucket": "2021-08-28T03:45:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "RUN",
          "time": "2021-08-27T20:48:16Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 20893696,
          "size_human": "21 MB",
          "command_snippet": "RUN set -x && \\\n\taddgroup -g 101 -S nginx &&...",
          "command_all": "RUN set -x && \\\n\taddgroup -g 101 -S nginx && \\\n\tadduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx && \\\n\tapkArch=\"$(cat /etc/apk/arch)\" && \\\n\tnginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \" && \\\n\tcase \"$apkArch\" in         x86_64|aarch64)             set -x && \\\n\tKEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\" && \\\n\tapk add --no-cache --virtual .cert-deps                 openssl && \\\n\twget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub && \\\n\tif [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi && \\\n\tapk del .cert-deps && \\\n\tapk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x && \\\n\ttempDir=\"$(mktemp -d)\" && \\\n\tchown nobody:nobody $tempDir && \\\n\tapk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils && \\\n\tsu nobody -s /bin/sh -c \"                 export HOME=${tempDir} && \\\n\tcd ${tempDir} && \\\n\thg clone https://hg.nginx.org/pkg-oss && \\\n\tcd pkg-oss && \\\n\thg up ${NGINX_VERSION}-${PKG_RELEASE} && \\\n\tcd alpine && \\\n\tmake all && \\\n\tapk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk && \\\n\tabuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \" && \\\n\tcp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/ && \\\n\tapk del .build-deps && \\\n\tapk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac && \\\n\tif [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi && \\\n\tif [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi && \\\n\tif [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi && \\\n\tapk add --no-cache --virtual .gettext gettext && \\\n\tmv /usr/bin/envsubst /tmp/ && \\\n\trunDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\" && \\\n\tapk add --no-cache $runDeps && \\\n\tapk del .gettext && \\\n\tmv /tmp/envsubst /usr/local/bin/ && \\\n\tapk add --no-cache tzdata && \\\n\tapk add --no-cache curl ca-certificates && \\\n\tln -sf /dev/stdout /var/log/nginx/access.log && \\\n\tln -sf /dev/stderr /var/log/nginx/error.log && \\\n\tmkdir /docker-entrypoint.d",
          "system_commands": [
            "set -x",
            "addgroup -g 101 -S nginx",
            "adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx",
            "apkArch=\"$(cat /etc/apk/arch)\"",
            "nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"",
            "case \"$apkArch\" in         x86_64|aarch64)             set -x",
            "KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"",
            "apk add --no-cache --virtual .cert-deps                 openssl",
            "wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub",
            "if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi",
            "apk del .cert-deps",
            "apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x",
            "tempDir=\"$(mktemp -d)\"",
            "chown nobody:nobody $tempDir",
            "apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils",
            "su nobody -s /bin/sh -c \"                 export HOME=${tempDir}",
            "cd ${tempDir}",
            "hg clone https://hg.nginx.org/pkg-oss",
            "cd pkg-oss",
            "hg up ${NGINX_VERSION}-${PKG_RELEASE}",
            "cd alpine",
            "make all",
            "apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk",
            "abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"",
            "cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/",
            "apk del .build-deps",
            "apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac",
            "if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi",
            "if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi",
            "if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi",
            "apk add --no-cache --virtual .gettext gettext",
            "mv /usr/bin/envsubst /tmp/",
            "runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"",
            "apk add --no-cache $runDeps",
            "apk del .gettext",
            "mv /tmp/envsubst /usr/local/bin/",
            "apk add --no-cache tzdata",
            "apk add --no-cache curl ca-certificates",
            "ln -sf /dev/stdout /var/log/nginx/access.log",
            "ln -sf /dev/stderr /var/log/nginx/error.log",
            "mkdir /docker-entrypoint.d"
          ],
          "inst_set_time_bucket": "2021-08-28T03:45:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "COPY",
          "time": "2021-08-27T20:48:17Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 8192,
          "size_human": "8.2 kB",
          "params": "file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in /",
          "command_snippet": "COPY file:65504f71f5855ca017fb64d502ce873a31...",
          "command_all": "COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 /",
          "target": "/",
          "source_type": "file",
          "inst_set_time_bucket": "2021-08-28T03:45:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "COPY",
          "time": "2021-08-27T20:48:17Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 12288,
          "size_human": "12 kB",
          "params": "file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d",
          "command_snippet": "COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f6...",
          "command_all": "COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da /docker-entrypoint.d",
          "target": "/docker-entrypoint.d",
          "source_type": "file",
          "inst_set_time_bucket": "2021-08-28T03:45:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "COPY",
          "time": "2021-08-27T20:48:18Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 12288,
          "size_human": "12 kB",
          "params": "file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d",
          "command_snippet": "COPY file:0fd5fca330dcd6a7de297435e32af634f2...",
          "command_all": "COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 /docker-entrypoint.d",
          "target": "/docker-entrypoint.d",
          "source_type": "file",
          "inst_set_time_bucket": "2021-08-28T03:45:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "COPY",
          "time": "2021-08-27T20:48:18Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 16384,
          "size_human": "16 kB",
          "params": "file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d",
          "command_snippet": "COPY file:09a214a3e07c919af2fb2d7c749ccbc446...",
          "command_all": "COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 /docker-entrypoint.d",
          "target": "/docker-entrypoint.d",
          "source_type": "file",
          "inst_set_time_bucket": "2021-08-28T03:45:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "ENTRYPOINT",
          "time": "2021-08-27T20:48:18Z",
          "is_nop": true,
          "is_exec_form": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "[\"/docker-entrypoint.sh\"]\n",
          "command_snippet": "ENTRYPOINT [\"/docker-entrypoint.sh\"]\n",
          "command_all": "ENTRYPOINT [\"/docker-entrypoint.sh\"]\n",
          "inst_set_time_bucket": "2021-08-28T03:45:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "EXPOSE",
          "time": "2021-08-27T20:48:19Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "80",
          "command_snippet": "EXPOSE 80",
          "command_all": "EXPOSE 80",
          "inst_set_time_bucket": "2021-08-28T03:45:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "STOPSIGNAL",
          "time": "2021-08-27T20:48:19Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "SIGQUIT",
          "command_snippet": "STOPSIGNAL SIGQUIT",
          "command_all": "STOPSIGNAL SIGQUIT",
          "inst_set_time_bucket": "2021-08-28T03:45:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "CMD",
          "time": "2021-08-27T20:48:20Z",
          "is_nop": true,
          "is_exec_form": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "[\"nginx\",\"-g\",\"daemon off;\"]\n",
          "command_snippet": "CMD [\"nginx\",\"-g\",\"daemon off;\"]\n",
          "command_all": "CMD [\"nginx\",\"-g\",\"daemon off;\"]\n",
          "inst_set_time_bucket": "2021-08-28T03:45:00+07:00",
          "inst_set_time_index": 1,
          "inst_set_time_reverse_index": 1
        },
        {
          "type": "COPY",
          "time": "2024-10-15T04:23:28Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 26996736,
          "size_human": "27 MB",
          "params": "/app/build/web /usr/share/nginx/html",
          "command_snippet": "COPY /app/build/web /usr/share/nginx/html",
          "command_all": "COPY /app/build/web /usr/share/nginx/html",
          "comment": "buildkit.dockerfile.v0",
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-10-15T11:15:00+07:00",
          "inst_set_time_index": 2,
          "inst_set_time_reverse_index": 0
        },
        {
          "type": "EXPOSE",
          "time": "2024-10-15T04:23:28Z",
          "is_last_instruction": true,
          "is_nop": false,
          "local_image_exists": true,
          "layer_index": 0,
          "size": 0,
          "params": "80/tcp",
          "command_snippet": "EXPOSE 80/tcp",
          "command_all": "EXPOSE 80/tcp",
          "comment": "buildkit.dockerfile.v0",
          "raw_tags": [
            "srs-front_end:latest"
          ],
          "is_buildkit_instruction": true,
          "inst_set_time_bucket": "2024-10-15T11:15:00+07:00",
          "inst_set_time_index": 2,
          "inst_set_time_reverse_index": 0
        }
      ]
    }
  ],
  "image_created": true,
  "image_build_engine": "internal"
}
